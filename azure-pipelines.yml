trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
  - stage: Build
    jobs:
      - job: BuildAndPublish
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '*.sln'

          - task: DotNetCoreCLI@2
            displayName: Build solution
            inputs:
              command: 'build'
              projects: '*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Publish project
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '*.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            displayName: Publish Artifact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    dependsOn: Build
    jobs:
      - deployment: DeployToAppService
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure App Service'
                  inputs:
                    azureSubscription: '$(azureSubscription-dev)'
                    appType: 'webApp'
                    appName: 'DancingGoat'
                    package: '$(Pipeline.Workspace)/drop/*.zip'
